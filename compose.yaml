services:
  postgres:
    image: 'postgres:15.3'
    hostname: 'db'
    environment:
#      - 'POSTGRES_DB=mydatabase'
      - 'POSTGRES_PASSWORD=test'
      - 'POSTGRES_USER=test'
#      - 'PGUSER=test'
    ports:
      - '5432:5432'
    restart: unless-stopped
    volumes:
      - './data/postgres:/var/lib/postgresql/data'
      - './sql/create_tables.sql:/docker-entrypoint-initdb.d/create_tables.sql'
    networks:
      - 'mynet'
  rabbitmq:
    image: 'rabbitmq:3-management'
    hostname: 'rabbitmq-container'
    environment:
      - 'RABBITMQ_DEFAULT_PASS=secret'
      - 'RABBITMQ_DEFAULT_USER=myuser'
    ports:
      - '5672:5672'
      - '15672:15672'
    networks:
      - 'mynet'
  app:
    image: 'routing:1.0.2.RELEASE'
    ports:
      - '8080:8080'
    depends_on:
      - 'postgres'
      - 'rabbitmq'
    networks:
      - 'mynet'
    environment:
      - 'spring_rabbitmq_host=rabbitmq-container'
      - 'spring_rabbitmq_port=5672'
      - 'spring_rabbitmq_username=myuser'
      - 'spring_rabbitmq_password=secret'
    extra_hosts:
      - 'host.docker.internal:host-gateway'
networks:
  mynet:
    driver: 'bridge'

#  routing:
#    container_name: 'routing'
#    build:
#      context: '.'
#      dockerfile: 'Dockerfile'
#    image: 'routing:latest'
#    ports:
#      - '8080:8080'
#    depends_on:
#      - 'postgres'
#      - 'rabbitmq'
#    environment:
#      - 'spring_rabbitmq_host=rabbitmq-container'
#      - 'spring_rabbitmq_port=5672'
#      - 'spring_rabbitmq_username=myuser'
#      - 'spring_rabbitmq_password=secret'
#    extra_hosts:
#      - 'host.docker.internal:host-gateway'